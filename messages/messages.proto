syntax = "proto3";

package messages;

// The network control service definition.
service NetworkControl {
  rpc Echo (EchoRequest) returns (EchoResponse) {}
  rpc Ping (PingRequest) returns (PingResponse) {}

  rpc CreateBridge (CreateBridgeRequest) returns(OVSResponse) {}
  rpc DeleteBridge (DeleteBridgeRequest) returns(OVSResponse) {}

  rpc AddPort (AddPortRequest) returns(OVSResponse) {}
  rpc AddDPDKPort (AddPortRequest) returns(OVSResponse) {}
  rpc GetPort (GetPortRequest) returns(GetPortResponse) {}
  rpc SetPort (SetPortRequest) returns(OVSResponse) {}
  rpc DeletePort (DeletePortRequest) returns(OVSResponse) {}

  rpc AddFlow (AddFlowRequest) returns(OVSResponse) {}
  rpc DeleteFlow (DeleteFlowRequest) returns(OVSResponse) {}
  rpc DumpFlows (DumpFlowsRequest) returns(DumpFlowsResponse) {}

  rpc DumpPorts (DumpPortsRequest) returns(DumpPortsResponse) {}
  rpc DumpPort (DumpPortRequest) returns(DumpPortResponse) {}

  rpc FindNetworkNamespacePath (FindNetworkNamespacePathRequest) returns(FindNetworkNamespacePathResponse) {}

  rpc ConnectBridge (ConnectBridgeRequest) returns (ConnectBridgeResponse) {}

  rpc ConfigureIface (ConfigureIfaceRequest) returns (ConfigureIfaceResponse) {}
}

message EchoRequest {
  string word = 1;
}

message EchoResponse {
  string word = 1;
}

message PingRequest {
  string ping = 1;
}

message PingResponse {
  string pong = 1;
}

message OVSResponse {
  string type = 1;
  bool success = 2;
  string reason = 3;
}

message CreateBridgeRequest {
  string bridgeName = 1;
  string datapathType = 2;
}

message DeleteBridgeRequest {
  string bridgeName = 1;
}

message AddPortRequest {
  string bridgeName = 1;
  string ifaceName = 2;
  // option message: only for dpdk usage
  string dpdkDevargs = 3;
}

message PortOptions {
 int32 tag = 1;
 string VLANMode = 2;
 repeated int32 trunk = 3;
}

message SetPortRequest {
  string ifaceName = 1;
  PortOptions portOptions = 2;
}

message GetPortRequest {
  string ifaceName = 1;
  PortOptions portOptions = 2;
}

message GetPortResponse {
  PortOptions portOptions = 1;
  bool success = 2;
  string reason = 3;
}

message DeletePortRequest {
  string bridgeName = 1;
  string ifaceName = 2;
}

message AddFlowRequest {
  string bridgeName = 1;
  string flowString = 2;
}

message DeleteFlowRequest {
  string bridgeName = 1;
  string flowString = 2;
}

message DumpFlowsRequest {
  string bridgeName = 1;
}

message DumpFlowsResponse {
  repeated bytes flows = 1;
  bool success = 2;
  string reason = 3;
}

message DumpPortsRequest {
  string bridgeName = 1;
}

message DumpPortsResponse {
  repeated bytes ports = 1;
  bool success = 2;
  string reason = 3;
}

message DumpPortRequest {
  string bridgeName = 1;
  string portName = 2;
}

message DumpPortResponse {
  bytes port = 1;
  bool success = 2;
  string reason = 3;
}

message FindNetworkNamespacePathRequest {
  string podName = 1;
  string namespace = 2;
  string podUUID = 3;
}

message FindNetworkNamespacePathResponse {
  string path = 1;
  bool success = 2;
  string reason = 3;
}

message ConnectBridgeRequest {
  string path = 1;
  string podUUID = 2;
  string containerVethName = 3;
  string bridgeName = 4;
}

message ConnectBridgeResponse {
  bool success = 1;
  string reason = 2;
}

message ConfigureIfaceRequest {
  string path = 1;
  string IP = 2;
  string containerVethName = 3;
}

message ConfigureIfaceResponse {
  bool success = 1;
  string reason = 2;
}
