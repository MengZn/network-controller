// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages/messages.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{0}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type EchoResponse struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{1}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (dst *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(dst, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type PingRequest struct {
	Ping                 string   `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{2}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

type PingResponse struct {
	Pong                 string   `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{3}
}
func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (dst *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(dst, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetPong() string {
	if m != nil {
		return m.Pong
	}
	return ""
}

type OVSResponse struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OVSResponse) Reset()         { *m = OVSResponse{} }
func (m *OVSResponse) String() string { return proto.CompactTextString(m) }
func (*OVSResponse) ProtoMessage()    {}
func (*OVSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{4}
}
func (m *OVSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OVSResponse.Unmarshal(m, b)
}
func (m *OVSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OVSResponse.Marshal(b, m, deterministic)
}
func (dst *OVSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OVSResponse.Merge(dst, src)
}
func (m *OVSResponse) XXX_Size() int {
	return xxx_messageInfo_OVSResponse.Size(m)
}
func (m *OVSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OVSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OVSResponse proto.InternalMessageInfo

func (m *OVSResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OVSResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OVSResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CreateBridgeRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	DatapathType         string   `protobuf:"bytes,2,opt,name=datapathType,proto3" json:"datapathType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBridgeRequest) Reset()         { *m = CreateBridgeRequest{} }
func (m *CreateBridgeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBridgeRequest) ProtoMessage()    {}
func (*CreateBridgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{5}
}
func (m *CreateBridgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBridgeRequest.Unmarshal(m, b)
}
func (m *CreateBridgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBridgeRequest.Marshal(b, m, deterministic)
}
func (dst *CreateBridgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBridgeRequest.Merge(dst, src)
}
func (m *CreateBridgeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBridgeRequest.Size(m)
}
func (m *CreateBridgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBridgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBridgeRequest proto.InternalMessageInfo

func (m *CreateBridgeRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *CreateBridgeRequest) GetDatapathType() string {
	if m != nil {
		return m.DatapathType
	}
	return ""
}

type DeleteBridgeRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBridgeRequest) Reset()         { *m = DeleteBridgeRequest{} }
func (m *DeleteBridgeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBridgeRequest) ProtoMessage()    {}
func (*DeleteBridgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{6}
}
func (m *DeleteBridgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBridgeRequest.Unmarshal(m, b)
}
func (m *DeleteBridgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBridgeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteBridgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBridgeRequest.Merge(dst, src)
}
func (m *DeleteBridgeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBridgeRequest.Size(m)
}
func (m *DeleteBridgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBridgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBridgeRequest proto.InternalMessageInfo

func (m *DeleteBridgeRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

type AddPortRequest struct {
	BridgeName string `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	IfaceName  string `protobuf:"bytes,2,opt,name=ifaceName,proto3" json:"ifaceName,omitempty"`
	// option message: only for dpdk usage
	DpdkDevargs          string   `protobuf:"bytes,3,opt,name=dpdkDevargs,proto3" json:"dpdkDevargs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPortRequest) Reset()         { *m = AddPortRequest{} }
func (m *AddPortRequest) String() string { return proto.CompactTextString(m) }
func (*AddPortRequest) ProtoMessage()    {}
func (*AddPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{7}
}
func (m *AddPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPortRequest.Unmarshal(m, b)
}
func (m *AddPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPortRequest.Marshal(b, m, deterministic)
}
func (dst *AddPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPortRequest.Merge(dst, src)
}
func (m *AddPortRequest) XXX_Size() int {
	return xxx_messageInfo_AddPortRequest.Size(m)
}
func (m *AddPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPortRequest proto.InternalMessageInfo

func (m *AddPortRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *AddPortRequest) GetIfaceName() string {
	if m != nil {
		return m.IfaceName
	}
	return ""
}

func (m *AddPortRequest) GetDpdkDevargs() string {
	if m != nil {
		return m.DpdkDevargs
	}
	return ""
}

type PortOptions struct {
	Tag                  int32    `protobuf:"varint,1,opt,name=tag,proto3" json:"tag,omitempty"`
	VLANMode             string   `protobuf:"bytes,2,opt,name=VLANMode,proto3" json:"VLANMode,omitempty"`
	Trunk                []int32  `protobuf:"varint,3,rep,packed,name=trunk,proto3" json:"trunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortOptions) Reset()         { *m = PortOptions{} }
func (m *PortOptions) String() string { return proto.CompactTextString(m) }
func (*PortOptions) ProtoMessage()    {}
func (*PortOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{8}
}
func (m *PortOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortOptions.Unmarshal(m, b)
}
func (m *PortOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortOptions.Marshal(b, m, deterministic)
}
func (dst *PortOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortOptions.Merge(dst, src)
}
func (m *PortOptions) XXX_Size() int {
	return xxx_messageInfo_PortOptions.Size(m)
}
func (m *PortOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PortOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PortOptions proto.InternalMessageInfo

func (m *PortOptions) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *PortOptions) GetVLANMode() string {
	if m != nil {
		return m.VLANMode
	}
	return ""
}

func (m *PortOptions) GetTrunk() []int32 {
	if m != nil {
		return m.Trunk
	}
	return nil
}

type SetPortRequest struct {
	IfaceName            string       `protobuf:"bytes,1,opt,name=ifaceName,proto3" json:"ifaceName,omitempty"`
	PortOptions          *PortOptions `protobuf:"bytes,2,opt,name=portOptions,proto3" json:"portOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetPortRequest) Reset()         { *m = SetPortRequest{} }
func (m *SetPortRequest) String() string { return proto.CompactTextString(m) }
func (*SetPortRequest) ProtoMessage()    {}
func (*SetPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{9}
}
func (m *SetPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPortRequest.Unmarshal(m, b)
}
func (m *SetPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPortRequest.Marshal(b, m, deterministic)
}
func (dst *SetPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPortRequest.Merge(dst, src)
}
func (m *SetPortRequest) XXX_Size() int {
	return xxx_messageInfo_SetPortRequest.Size(m)
}
func (m *SetPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPortRequest proto.InternalMessageInfo

func (m *SetPortRequest) GetIfaceName() string {
	if m != nil {
		return m.IfaceName
	}
	return ""
}

func (m *SetPortRequest) GetPortOptions() *PortOptions {
	if m != nil {
		return m.PortOptions
	}
	return nil
}

type GetPortRequest struct {
	IfaceName            string       `protobuf:"bytes,1,opt,name=ifaceName,proto3" json:"ifaceName,omitempty"`
	PortOptions          *PortOptions `protobuf:"bytes,2,opt,name=portOptions,proto3" json:"portOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetPortRequest) Reset()         { *m = GetPortRequest{} }
func (m *GetPortRequest) String() string { return proto.CompactTextString(m) }
func (*GetPortRequest) ProtoMessage()    {}
func (*GetPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{10}
}
func (m *GetPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortRequest.Unmarshal(m, b)
}
func (m *GetPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortRequest.Marshal(b, m, deterministic)
}
func (dst *GetPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortRequest.Merge(dst, src)
}
func (m *GetPortRequest) XXX_Size() int {
	return xxx_messageInfo_GetPortRequest.Size(m)
}
func (m *GetPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortRequest proto.InternalMessageInfo

func (m *GetPortRequest) GetIfaceName() string {
	if m != nil {
		return m.IfaceName
	}
	return ""
}

func (m *GetPortRequest) GetPortOptions() *PortOptions {
	if m != nil {
		return m.PortOptions
	}
	return nil
}

type GetPortResponse struct {
	PortOptions          *PortOptions `protobuf:"bytes,1,opt,name=portOptions,proto3" json:"portOptions,omitempty"`
	Success              bool         `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string       `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetPortResponse) Reset()         { *m = GetPortResponse{} }
func (m *GetPortResponse) String() string { return proto.CompactTextString(m) }
func (*GetPortResponse) ProtoMessage()    {}
func (*GetPortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{11}
}
func (m *GetPortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortResponse.Unmarshal(m, b)
}
func (m *GetPortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortResponse.Marshal(b, m, deterministic)
}
func (dst *GetPortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortResponse.Merge(dst, src)
}
func (m *GetPortResponse) XXX_Size() int {
	return xxx_messageInfo_GetPortResponse.Size(m)
}
func (m *GetPortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortResponse proto.InternalMessageInfo

func (m *GetPortResponse) GetPortOptions() *PortOptions {
	if m != nil {
		return m.PortOptions
	}
	return nil
}

func (m *GetPortResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetPortResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type DeletePortRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	IfaceName            string   `protobuf:"bytes,2,opt,name=ifaceName,proto3" json:"ifaceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePortRequest) Reset()         { *m = DeletePortRequest{} }
func (m *DeletePortRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePortRequest) ProtoMessage()    {}
func (*DeletePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{12}
}
func (m *DeletePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePortRequest.Unmarshal(m, b)
}
func (m *DeletePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePortRequest.Marshal(b, m, deterministic)
}
func (dst *DeletePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePortRequest.Merge(dst, src)
}
func (m *DeletePortRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePortRequest.Size(m)
}
func (m *DeletePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePortRequest proto.InternalMessageInfo

func (m *DeletePortRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *DeletePortRequest) GetIfaceName() string {
	if m != nil {
		return m.IfaceName
	}
	return ""
}

type AddFlowRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	FlowString           string   `protobuf:"bytes,2,opt,name=flowString,proto3" json:"flowString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowRequest) Reset()         { *m = AddFlowRequest{} }
func (m *AddFlowRequest) String() string { return proto.CompactTextString(m) }
func (*AddFlowRequest) ProtoMessage()    {}
func (*AddFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{13}
}
func (m *AddFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowRequest.Unmarshal(m, b)
}
func (m *AddFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowRequest.Marshal(b, m, deterministic)
}
func (dst *AddFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowRequest.Merge(dst, src)
}
func (m *AddFlowRequest) XXX_Size() int {
	return xxx_messageInfo_AddFlowRequest.Size(m)
}
func (m *AddFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowRequest proto.InternalMessageInfo

func (m *AddFlowRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *AddFlowRequest) GetFlowString() string {
	if m != nil {
		return m.FlowString
	}
	return ""
}

type DeleteFlowRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	FlowString           string   `protobuf:"bytes,2,opt,name=flowString,proto3" json:"flowString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFlowRequest) Reset()         { *m = DeleteFlowRequest{} }
func (m *DeleteFlowRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFlowRequest) ProtoMessage()    {}
func (*DeleteFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{14}
}
func (m *DeleteFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFlowRequest.Unmarshal(m, b)
}
func (m *DeleteFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFlowRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFlowRequest.Merge(dst, src)
}
func (m *DeleteFlowRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFlowRequest.Size(m)
}
func (m *DeleteFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFlowRequest proto.InternalMessageInfo

func (m *DeleteFlowRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *DeleteFlowRequest) GetFlowString() string {
	if m != nil {
		return m.FlowString
	}
	return ""
}

type DumpFlowsRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpFlowsRequest) Reset()         { *m = DumpFlowsRequest{} }
func (m *DumpFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*DumpFlowsRequest) ProtoMessage()    {}
func (*DumpFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{15}
}
func (m *DumpFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpFlowsRequest.Unmarshal(m, b)
}
func (m *DumpFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpFlowsRequest.Marshal(b, m, deterministic)
}
func (dst *DumpFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpFlowsRequest.Merge(dst, src)
}
func (m *DumpFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_DumpFlowsRequest.Size(m)
}
func (m *DumpFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpFlowsRequest proto.InternalMessageInfo

func (m *DumpFlowsRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

type DumpFlowsResponse struct {
	Flows                [][]byte `protobuf:"bytes,1,rep,name=flows,proto3" json:"flows,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpFlowsResponse) Reset()         { *m = DumpFlowsResponse{} }
func (m *DumpFlowsResponse) String() string { return proto.CompactTextString(m) }
func (*DumpFlowsResponse) ProtoMessage()    {}
func (*DumpFlowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{16}
}
func (m *DumpFlowsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpFlowsResponse.Unmarshal(m, b)
}
func (m *DumpFlowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpFlowsResponse.Marshal(b, m, deterministic)
}
func (dst *DumpFlowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpFlowsResponse.Merge(dst, src)
}
func (m *DumpFlowsResponse) XXX_Size() int {
	return xxx_messageInfo_DumpFlowsResponse.Size(m)
}
func (m *DumpFlowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpFlowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpFlowsResponse proto.InternalMessageInfo

func (m *DumpFlowsResponse) GetFlows() [][]byte {
	if m != nil {
		return m.Flows
	}
	return nil
}

func (m *DumpFlowsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DumpFlowsResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type DumpPortsRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPortsRequest) Reset()         { *m = DumpPortsRequest{} }
func (m *DumpPortsRequest) String() string { return proto.CompactTextString(m) }
func (*DumpPortsRequest) ProtoMessage()    {}
func (*DumpPortsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{17}
}
func (m *DumpPortsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPortsRequest.Unmarshal(m, b)
}
func (m *DumpPortsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPortsRequest.Marshal(b, m, deterministic)
}
func (dst *DumpPortsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPortsRequest.Merge(dst, src)
}
func (m *DumpPortsRequest) XXX_Size() int {
	return xxx_messageInfo_DumpPortsRequest.Size(m)
}
func (m *DumpPortsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPortsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPortsRequest proto.InternalMessageInfo

func (m *DumpPortsRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

type DumpPortsResponse struct {
	Ports                [][]byte `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPortsResponse) Reset()         { *m = DumpPortsResponse{} }
func (m *DumpPortsResponse) String() string { return proto.CompactTextString(m) }
func (*DumpPortsResponse) ProtoMessage()    {}
func (*DumpPortsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{18}
}
func (m *DumpPortsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPortsResponse.Unmarshal(m, b)
}
func (m *DumpPortsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPortsResponse.Marshal(b, m, deterministic)
}
func (dst *DumpPortsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPortsResponse.Merge(dst, src)
}
func (m *DumpPortsResponse) XXX_Size() int {
	return xxx_messageInfo_DumpPortsResponse.Size(m)
}
func (m *DumpPortsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPortsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPortsResponse proto.InternalMessageInfo

func (m *DumpPortsResponse) GetPorts() [][]byte {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *DumpPortsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DumpPortsResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type DumpPortRequest struct {
	BridgeName           string   `protobuf:"bytes,1,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	PortName             string   `protobuf:"bytes,2,opt,name=portName,proto3" json:"portName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPortRequest) Reset()         { *m = DumpPortRequest{} }
func (m *DumpPortRequest) String() string { return proto.CompactTextString(m) }
func (*DumpPortRequest) ProtoMessage()    {}
func (*DumpPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{19}
}
func (m *DumpPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPortRequest.Unmarshal(m, b)
}
func (m *DumpPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPortRequest.Marshal(b, m, deterministic)
}
func (dst *DumpPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPortRequest.Merge(dst, src)
}
func (m *DumpPortRequest) XXX_Size() int {
	return xxx_messageInfo_DumpPortRequest.Size(m)
}
func (m *DumpPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPortRequest proto.InternalMessageInfo

func (m *DumpPortRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *DumpPortRequest) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

type DumpPortResponse struct {
	Port                 []byte   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpPortResponse) Reset()         { *m = DumpPortResponse{} }
func (m *DumpPortResponse) String() string { return proto.CompactTextString(m) }
func (*DumpPortResponse) ProtoMessage()    {}
func (*DumpPortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{20}
}
func (m *DumpPortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpPortResponse.Unmarshal(m, b)
}
func (m *DumpPortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpPortResponse.Marshal(b, m, deterministic)
}
func (dst *DumpPortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpPortResponse.Merge(dst, src)
}
func (m *DumpPortResponse) XXX_Size() int {
	return xxx_messageInfo_DumpPortResponse.Size(m)
}
func (m *DumpPortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpPortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpPortResponse proto.InternalMessageInfo

func (m *DumpPortResponse) GetPort() []byte {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *DumpPortResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DumpPortResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type FindNetworkNamespacePathRequest struct {
	PodName              string   `protobuf:"bytes,1,opt,name=podName,proto3" json:"podName,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodUUID              string   `protobuf:"bytes,3,opt,name=podUUID,proto3" json:"podUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNetworkNamespacePathRequest) Reset()         { *m = FindNetworkNamespacePathRequest{} }
func (m *FindNetworkNamespacePathRequest) String() string { return proto.CompactTextString(m) }
func (*FindNetworkNamespacePathRequest) ProtoMessage()    {}
func (*FindNetworkNamespacePathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{21}
}
func (m *FindNetworkNamespacePathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNetworkNamespacePathRequest.Unmarshal(m, b)
}
func (m *FindNetworkNamespacePathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNetworkNamespacePathRequest.Marshal(b, m, deterministic)
}
func (dst *FindNetworkNamespacePathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNetworkNamespacePathRequest.Merge(dst, src)
}
func (m *FindNetworkNamespacePathRequest) XXX_Size() int {
	return xxx_messageInfo_FindNetworkNamespacePathRequest.Size(m)
}
func (m *FindNetworkNamespacePathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNetworkNamespacePathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindNetworkNamespacePathRequest proto.InternalMessageInfo

func (m *FindNetworkNamespacePathRequest) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *FindNetworkNamespacePathRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *FindNetworkNamespacePathRequest) GetPodUUID() string {
	if m != nil {
		return m.PodUUID
	}
	return ""
}

type FindNetworkNamespacePathResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNetworkNamespacePathResponse) Reset()         { *m = FindNetworkNamespacePathResponse{} }
func (m *FindNetworkNamespacePathResponse) String() string { return proto.CompactTextString(m) }
func (*FindNetworkNamespacePathResponse) ProtoMessage()    {}
func (*FindNetworkNamespacePathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{22}
}
func (m *FindNetworkNamespacePathResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNetworkNamespacePathResponse.Unmarshal(m, b)
}
func (m *FindNetworkNamespacePathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNetworkNamespacePathResponse.Marshal(b, m, deterministic)
}
func (dst *FindNetworkNamespacePathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNetworkNamespacePathResponse.Merge(dst, src)
}
func (m *FindNetworkNamespacePathResponse) XXX_Size() int {
	return xxx_messageInfo_FindNetworkNamespacePathResponse.Size(m)
}
func (m *FindNetworkNamespacePathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNetworkNamespacePathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindNetworkNamespacePathResponse proto.InternalMessageInfo

func (m *FindNetworkNamespacePathResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FindNetworkNamespacePathResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *FindNetworkNamespacePathResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ConnectBridgeRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	PodUUID              string   `protobuf:"bytes,2,opt,name=podUUID,proto3" json:"podUUID,omitempty"`
	ContainerVethName    string   `protobuf:"bytes,3,opt,name=containerVethName,proto3" json:"containerVethName,omitempty"`
	BridgeName           string   `protobuf:"bytes,4,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectBridgeRequest) Reset()         { *m = ConnectBridgeRequest{} }
func (m *ConnectBridgeRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectBridgeRequest) ProtoMessage()    {}
func (*ConnectBridgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{23}
}
func (m *ConnectBridgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectBridgeRequest.Unmarshal(m, b)
}
func (m *ConnectBridgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectBridgeRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectBridgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectBridgeRequest.Merge(dst, src)
}
func (m *ConnectBridgeRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectBridgeRequest.Size(m)
}
func (m *ConnectBridgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectBridgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectBridgeRequest proto.InternalMessageInfo

func (m *ConnectBridgeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ConnectBridgeRequest) GetPodUUID() string {
	if m != nil {
		return m.PodUUID
	}
	return ""
}

func (m *ConnectBridgeRequest) GetContainerVethName() string {
	if m != nil {
		return m.ContainerVethName
	}
	return ""
}

func (m *ConnectBridgeRequest) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

type ConnectBridgeResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectBridgeResponse) Reset()         { *m = ConnectBridgeResponse{} }
func (m *ConnectBridgeResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectBridgeResponse) ProtoMessage()    {}
func (*ConnectBridgeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{24}
}
func (m *ConnectBridgeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectBridgeResponse.Unmarshal(m, b)
}
func (m *ConnectBridgeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectBridgeResponse.Marshal(b, m, deterministic)
}
func (dst *ConnectBridgeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectBridgeResponse.Merge(dst, src)
}
func (m *ConnectBridgeResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectBridgeResponse.Size(m)
}
func (m *ConnectBridgeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectBridgeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectBridgeResponse proto.InternalMessageInfo

func (m *ConnectBridgeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ConnectBridgeResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ConfigureIfaceRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IP                   string   `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	ContainerVethName    string   `protobuf:"bytes,3,opt,name=containerVethName,proto3" json:"containerVethName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigureIfaceRequest) Reset()         { *m = ConfigureIfaceRequest{} }
func (m *ConfigureIfaceRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigureIfaceRequest) ProtoMessage()    {}
func (*ConfigureIfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{25}
}
func (m *ConfigureIfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigureIfaceRequest.Unmarshal(m, b)
}
func (m *ConfigureIfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigureIfaceRequest.Marshal(b, m, deterministic)
}
func (dst *ConfigureIfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureIfaceRequest.Merge(dst, src)
}
func (m *ConfigureIfaceRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigureIfaceRequest.Size(m)
}
func (m *ConfigureIfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureIfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureIfaceRequest proto.InternalMessageInfo

func (m *ConfigureIfaceRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ConfigureIfaceRequest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *ConfigureIfaceRequest) GetContainerVethName() string {
	if m != nil {
		return m.ContainerVethName
	}
	return ""
}

type ConfigureIfaceResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigureIfaceResponse) Reset()         { *m = ConfigureIfaceResponse{} }
func (m *ConfigureIfaceResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigureIfaceResponse) ProtoMessage()    {}
func (*ConfigureIfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_de6eaed31432bfe1, []int{26}
}
func (m *ConfigureIfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigureIfaceResponse.Unmarshal(m, b)
}
func (m *ConfigureIfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigureIfaceResponse.Marshal(b, m, deterministic)
}
func (dst *ConfigureIfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureIfaceResponse.Merge(dst, src)
}
func (m *ConfigureIfaceResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigureIfaceResponse.Size(m)
}
func (m *ConfigureIfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureIfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureIfaceResponse proto.InternalMessageInfo

func (m *ConfigureIfaceResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ConfigureIfaceResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "messages.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "messages.EchoResponse")
	proto.RegisterType((*PingRequest)(nil), "messages.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "messages.PingResponse")
	proto.RegisterType((*OVSResponse)(nil), "messages.OVSResponse")
	proto.RegisterType((*CreateBridgeRequest)(nil), "messages.CreateBridgeRequest")
	proto.RegisterType((*DeleteBridgeRequest)(nil), "messages.DeleteBridgeRequest")
	proto.RegisterType((*AddPortRequest)(nil), "messages.AddPortRequest")
	proto.RegisterType((*PortOptions)(nil), "messages.PortOptions")
	proto.RegisterType((*SetPortRequest)(nil), "messages.SetPortRequest")
	proto.RegisterType((*GetPortRequest)(nil), "messages.GetPortRequest")
	proto.RegisterType((*GetPortResponse)(nil), "messages.GetPortResponse")
	proto.RegisterType((*DeletePortRequest)(nil), "messages.DeletePortRequest")
	proto.RegisterType((*AddFlowRequest)(nil), "messages.AddFlowRequest")
	proto.RegisterType((*DeleteFlowRequest)(nil), "messages.DeleteFlowRequest")
	proto.RegisterType((*DumpFlowsRequest)(nil), "messages.DumpFlowsRequest")
	proto.RegisterType((*DumpFlowsResponse)(nil), "messages.DumpFlowsResponse")
	proto.RegisterType((*DumpPortsRequest)(nil), "messages.DumpPortsRequest")
	proto.RegisterType((*DumpPortsResponse)(nil), "messages.DumpPortsResponse")
	proto.RegisterType((*DumpPortRequest)(nil), "messages.DumpPortRequest")
	proto.RegisterType((*DumpPortResponse)(nil), "messages.DumpPortResponse")
	proto.RegisterType((*FindNetworkNamespacePathRequest)(nil), "messages.FindNetworkNamespacePathRequest")
	proto.RegisterType((*FindNetworkNamespacePathResponse)(nil), "messages.FindNetworkNamespacePathResponse")
	proto.RegisterType((*ConnectBridgeRequest)(nil), "messages.ConnectBridgeRequest")
	proto.RegisterType((*ConnectBridgeResponse)(nil), "messages.ConnectBridgeResponse")
	proto.RegisterType((*ConfigureIfaceRequest)(nil), "messages.ConfigureIfaceRequest")
	proto.RegisterType((*ConfigureIfaceResponse)(nil), "messages.ConfigureIfaceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetworkControlClient is the client API for NetworkControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkControlClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	CreateBridge(ctx context.Context, in *CreateBridgeRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	DeleteBridge(ctx context.Context, in *DeleteBridgeRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	AddPort(ctx context.Context, in *AddPortRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	AddDPDKPort(ctx context.Context, in *AddPortRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	GetPort(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*GetPortResponse, error)
	SetPort(ctx context.Context, in *SetPortRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	DeletePort(ctx context.Context, in *DeletePortRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	AddFlow(ctx context.Context, in *AddFlowRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	DeleteFlow(ctx context.Context, in *DeleteFlowRequest, opts ...grpc.CallOption) (*OVSResponse, error)
	DumpFlows(ctx context.Context, in *DumpFlowsRequest, opts ...grpc.CallOption) (*DumpFlowsResponse, error)
	DumpPorts(ctx context.Context, in *DumpPortsRequest, opts ...grpc.CallOption) (*DumpPortsResponse, error)
	DumpPort(ctx context.Context, in *DumpPortRequest, opts ...grpc.CallOption) (*DumpPortResponse, error)
	FindNetworkNamespacePath(ctx context.Context, in *FindNetworkNamespacePathRequest, opts ...grpc.CallOption) (*FindNetworkNamespacePathResponse, error)
	ConnectBridge(ctx context.Context, in *ConnectBridgeRequest, opts ...grpc.CallOption) (*ConnectBridgeResponse, error)
	ConfigureIface(ctx context.Context, in *ConfigureIfaceRequest, opts ...grpc.CallOption) (*ConfigureIfaceResponse, error)
}

type networkControlClient struct {
	cc *grpc.ClientConn
}

func NewNetworkControlClient(cc *grpc.ClientConn) NetworkControlClient {
	return &networkControlClient{cc}
}

func (c *networkControlClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) CreateBridge(ctx context.Context, in *CreateBridgeRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/CreateBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DeleteBridge(ctx context.Context, in *DeleteBridgeRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DeleteBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) AddPort(ctx context.Context, in *AddPortRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/AddPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) AddDPDKPort(ctx context.Context, in *AddPortRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/AddDPDKPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) GetPort(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*GetPortResponse, error) {
	out := new(GetPortResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/GetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) SetPort(ctx context.Context, in *SetPortRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/SetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DeletePort(ctx context.Context, in *DeletePortRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DeletePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) AddFlow(ctx context.Context, in *AddFlowRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/AddFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DeleteFlow(ctx context.Context, in *DeleteFlowRequest, opts ...grpc.CallOption) (*OVSResponse, error) {
	out := new(OVSResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DeleteFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DumpFlows(ctx context.Context, in *DumpFlowsRequest, opts ...grpc.CallOption) (*DumpFlowsResponse, error) {
	out := new(DumpFlowsResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DumpFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DumpPorts(ctx context.Context, in *DumpPortsRequest, opts ...grpc.CallOption) (*DumpPortsResponse, error) {
	out := new(DumpPortsResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DumpPorts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) DumpPort(ctx context.Context, in *DumpPortRequest, opts ...grpc.CallOption) (*DumpPortResponse, error) {
	out := new(DumpPortResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/DumpPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) FindNetworkNamespacePath(ctx context.Context, in *FindNetworkNamespacePathRequest, opts ...grpc.CallOption) (*FindNetworkNamespacePathResponse, error) {
	out := new(FindNetworkNamespacePathResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/FindNetworkNamespacePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) ConnectBridge(ctx context.Context, in *ConnectBridgeRequest, opts ...grpc.CallOption) (*ConnectBridgeResponse, error) {
	out := new(ConnectBridgeResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/ConnectBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkControlClient) ConfigureIface(ctx context.Context, in *ConfigureIfaceRequest, opts ...grpc.CallOption) (*ConfigureIfaceResponse, error) {
	out := new(ConfigureIfaceResponse)
	err := c.cc.Invoke(ctx, "/messages.NetworkControl/ConfigureIface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkControlServer is the server API for NetworkControl service.
type NetworkControlServer interface {
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	CreateBridge(context.Context, *CreateBridgeRequest) (*OVSResponse, error)
	DeleteBridge(context.Context, *DeleteBridgeRequest) (*OVSResponse, error)
	AddPort(context.Context, *AddPortRequest) (*OVSResponse, error)
	AddDPDKPort(context.Context, *AddPortRequest) (*OVSResponse, error)
	GetPort(context.Context, *GetPortRequest) (*GetPortResponse, error)
	SetPort(context.Context, *SetPortRequest) (*OVSResponse, error)
	DeletePort(context.Context, *DeletePortRequest) (*OVSResponse, error)
	AddFlow(context.Context, *AddFlowRequest) (*OVSResponse, error)
	DeleteFlow(context.Context, *DeleteFlowRequest) (*OVSResponse, error)
	DumpFlows(context.Context, *DumpFlowsRequest) (*DumpFlowsResponse, error)
	DumpPorts(context.Context, *DumpPortsRequest) (*DumpPortsResponse, error)
	DumpPort(context.Context, *DumpPortRequest) (*DumpPortResponse, error)
	FindNetworkNamespacePath(context.Context, *FindNetworkNamespacePathRequest) (*FindNetworkNamespacePathResponse, error)
	ConnectBridge(context.Context, *ConnectBridgeRequest) (*ConnectBridgeResponse, error)
	ConfigureIface(context.Context, *ConfigureIfaceRequest) (*ConfigureIfaceResponse, error)
}

func RegisterNetworkControlServer(s *grpc.Server, srv NetworkControlServer) {
	s.RegisterService(&_NetworkControl_serviceDesc, srv)
}

func _NetworkControl_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_CreateBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).CreateBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/CreateBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).CreateBridge(ctx, req.(*CreateBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DeleteBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DeleteBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DeleteBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DeleteBridge(ctx, req.(*DeleteBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_AddPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).AddPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/AddPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).AddPort(ctx, req.(*AddPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_AddDPDKPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).AddDPDKPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/AddDPDKPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).AddDPDKPort(ctx, req.(*AddPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_GetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).GetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/GetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).GetPort(ctx, req.(*GetPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_SetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).SetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/SetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).SetPort(ctx, req.(*SetPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DeletePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DeletePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DeletePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DeletePort(ctx, req.(*DeletePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_AddFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).AddFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/AddFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).AddFlow(ctx, req.(*AddFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DeleteFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DeleteFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DeleteFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DeleteFlow(ctx, req.(*DeleteFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DumpFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DumpFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DumpFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DumpFlows(ctx, req.(*DumpFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DumpPorts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpPortsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DumpPorts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DumpPorts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DumpPorts(ctx, req.(*DumpPortsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_DumpPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).DumpPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/DumpPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).DumpPort(ctx, req.(*DumpPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_FindNetworkNamespacePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNetworkNamespacePathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).FindNetworkNamespacePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/FindNetworkNamespacePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).FindNetworkNamespacePath(ctx, req.(*FindNetworkNamespacePathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_ConnectBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).ConnectBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/ConnectBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).ConnectBridge(ctx, req.(*ConnectBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkControl_ConfigureIface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureIfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkControlServer).ConfigureIface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.NetworkControl/ConfigureIface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkControlServer).ConfigureIface(ctx, req.(*ConfigureIfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.NetworkControl",
	HandlerType: (*NetworkControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _NetworkControl_Echo_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _NetworkControl_Ping_Handler,
		},
		{
			MethodName: "CreateBridge",
			Handler:    _NetworkControl_CreateBridge_Handler,
		},
		{
			MethodName: "DeleteBridge",
			Handler:    _NetworkControl_DeleteBridge_Handler,
		},
		{
			MethodName: "AddPort",
			Handler:    _NetworkControl_AddPort_Handler,
		},
		{
			MethodName: "AddDPDKPort",
			Handler:    _NetworkControl_AddDPDKPort_Handler,
		},
		{
			MethodName: "GetPort",
			Handler:    _NetworkControl_GetPort_Handler,
		},
		{
			MethodName: "SetPort",
			Handler:    _NetworkControl_SetPort_Handler,
		},
		{
			MethodName: "DeletePort",
			Handler:    _NetworkControl_DeletePort_Handler,
		},
		{
			MethodName: "AddFlow",
			Handler:    _NetworkControl_AddFlow_Handler,
		},
		{
			MethodName: "DeleteFlow",
			Handler:    _NetworkControl_DeleteFlow_Handler,
		},
		{
			MethodName: "DumpFlows",
			Handler:    _NetworkControl_DumpFlows_Handler,
		},
		{
			MethodName: "DumpPorts",
			Handler:    _NetworkControl_DumpPorts_Handler,
		},
		{
			MethodName: "DumpPort",
			Handler:    _NetworkControl_DumpPort_Handler,
		},
		{
			MethodName: "FindNetworkNamespacePath",
			Handler:    _NetworkControl_FindNetworkNamespacePath_Handler,
		},
		{
			MethodName: "ConnectBridge",
			Handler:    _NetworkControl_ConnectBridge_Handler,
		},
		{
			MethodName: "ConfigureIface",
			Handler:    _NetworkControl_ConfigureIface_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages/messages.proto",
}

func init() { proto.RegisterFile("messages/messages.proto", fileDescriptor_messages_de6eaed31432bfe1) }

var fileDescriptor_messages_de6eaed31432bfe1 = []byte{
	// 910 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x41, 0x6f, 0xeb, 0x44,
	0x10, 0x6e, 0x92, 0xe6, 0x25, 0x19, 0x87, 0xbc, 0xd7, 0x7d, 0x6d, 0x71, 0x5d, 0x68, 0xd3, 0x3d,
	0x05, 0x84, 0x8a, 0x54, 0x84, 0x7a, 0xe1, 0x40, 0x9b, 0x10, 0x14, 0xa0, 0x6d, 0xea, 0xd0, 0x0a,
	0xc4, 0xc9, 0x8d, 0xb7, 0x8e, 0xd5, 0xd4, 0x6b, 0xbc, 0x1b, 0x22, 0x24, 0x7e, 0x05, 0xff, 0x8b,
	0xff, 0x84, 0xd6, 0xf6, 0xda, 0x6b, 0x27, 0x06, 0x37, 0xaa, 0xde, 0x6d, 0x67, 0x77, 0xe6, 0x9b,
	0x6f, 0x76, 0xc7, 0x33, 0x63, 0xf8, 0xf8, 0x99, 0x30, 0x66, 0x39, 0x84, 0x7d, 0x29, 0x17, 0xa7,
	0x7e, 0x40, 0x39, 0x45, 0x4d, 0x29, 0xe3, 0x13, 0xd0, 0xbe, 0x9b, 0xce, 0xa8, 0x49, 0x7e, 0x5f,
	0x10, 0xc6, 0x11, 0x82, 0xed, 0x25, 0x0d, 0x6c, 0xbd, 0xd2, 0xad, 0xf4, 0x5a, 0x66, 0xb8, 0xc6,
	0x18, 0xda, 0x91, 0x0a, 0xf3, 0xa9, 0xc7, 0xc8, 0x5a, 0x9d, 0x13, 0xd0, 0xc6, 0xae, 0xe7, 0x28,
	0x30, 0xbe, 0xeb, 0x39, 0x52, 0x45, 0xac, 0x05, 0x4c, 0xa4, 0x92, 0xc2, 0xf8, 0x54, 0xd1, 0xa1,
	0x9e, 0x83, 0x27, 0xa0, 0xdd, 0xdc, 0x4f, 0x54, 0x15, 0xfe, 0xa7, 0x4f, 0xa4, 0x8a, 0x58, 0x23,
	0x1d, 0x1a, 0x6c, 0x31, 0x9d, 0x12, 0xc6, 0xf4, 0x6a, 0xb7, 0xd2, 0x6b, 0x9a, 0x52, 0x44, 0xfb,
	0xf0, 0x26, 0x20, 0x16, 0xa3, 0x9e, 0x5e, 0x0b, 0xf5, 0x63, 0x09, 0xff, 0x0a, 0xef, 0xfb, 0x01,
	0xb1, 0x38, 0xb9, 0x0c, 0x5c, 0xdb, 0x21, 0x92, 0xe3, 0x11, 0xc0, 0x43, 0xb8, 0x71, 0x6d, 0x3d,
	0x4b, 0x17, 0xca, 0x0e, 0xc2, 0xd0, 0xb6, 0x2d, 0x6e, 0xf9, 0x16, 0x9f, 0xfd, 0x2c, 0x48, 0x54,
	0x43, 0x8d, 0xcc, 0x1e, 0xfe, 0x1a, 0xde, 0x0f, 0xc8, 0x9c, 0xbc, 0x10, 0x1a, 0xfb, 0xd0, 0xb9,
	0xb0, 0xed, 0x31, 0x0d, 0x78, 0x59, 0x32, 0x9f, 0x40, 0xcb, 0x7d, 0xb4, 0xa6, 0xd1, 0x71, 0xc4,
	0x24, 0xdd, 0x40, 0x5d, 0xd0, 0x6c, 0xdf, 0x7e, 0x1a, 0x90, 0x3f, 0xac, 0xc0, 0x61, 0x71, 0xf8,
	0xea, 0x16, 0xbe, 0x05, 0x4d, 0xb8, 0xbb, 0xf1, 0xb9, 0x4b, 0x3d, 0x86, 0xde, 0x41, 0x8d, 0x5b,
	0xd1, 0xd5, 0xd7, 0x4d, 0xb1, 0x44, 0x06, 0x34, 0xef, 0x7f, 0xba, 0xb8, 0xbe, 0xa2, 0xb6, 0xc4,
	0x4f, 0x64, 0xb4, 0x0b, 0x75, 0x1e, 0x2c, 0xbc, 0x27, 0xbd, 0xd6, 0xad, 0xf5, 0xea, 0x66, 0x24,
	0x60, 0x07, 0x3a, 0x13, 0xc2, 0xd5, 0x20, 0x32, 0x24, 0x2b, 0x79, 0x92, 0xe7, 0xa0, 0xf9, 0x29,
	0x85, 0xd0, 0x89, 0x76, 0xb6, 0x77, 0x9a, 0x64, 0xa6, 0xc2, 0xcf, 0x54, 0x35, 0x85, 0xa3, 0xef,
	0x3f, 0x88, 0xa3, 0xbf, 0xe0, 0x6d, 0xe2, 0x28, 0xce, 0xc0, 0x1c, 0x56, 0xa5, 0x2c, 0xd6, 0x06,
	0x69, 0x7a, 0x0b, 0x3b, 0x51, 0x2e, 0xbd, 0x5a, 0x5e, 0xe0, 0x71, 0x98, 0x67, 0xc3, 0x39, 0x5d,
	0x96, 0xc5, 0x3b, 0x02, 0x78, 0x9c, 0xd3, 0xe5, 0x84, 0x07, 0xe2, 0xf3, 0x8d, 0x00, 0x95, 0x1d,
	0x3c, 0x91, 0x24, 0x5f, 0x13, 0xf4, 0x0c, 0xde, 0x0d, 0x16, 0xcf, 0xbe, 0x80, 0x64, 0x65, 0x3f,
	0xa1, 0xdf, 0x60, 0x47, 0xb1, 0x89, 0x5f, 0x6b, 0x17, 0xea, 0x02, 0x56, 0xbc, 0x53, 0xad, 0xd7,
	0x36, 0x23, 0x61, 0x83, 0xa7, 0x88, 0x09, 0x89, 0x87, 0x78, 0x29, 0xa1, 0xd8, 0x26, 0x25, 0x24,
	0x92, 0x22, 0x21, 0x14, 0x0a, 0x1b, 0x10, 0xba, 0x82, 0xb7, 0x12, 0xbc, 0xec, 0xa5, 0x1b, 0xd0,
	0x14, 0xde, 0x94, 0xc4, 0x48, 0x64, 0xfc, 0x4b, 0x1a, 0x5f, 0xb6, 0x1c, 0x07, 0x3c, 0x44, 0x6a,
	0x9b, 0xe1, 0x7a, 0x03, 0xa2, 0x0c, 0x8e, 0x87, 0xae, 0x67, 0x5f, 0x13, 0xbe, 0xa4, 0xc1, 0x93,
	0x70, 0xc6, 0x7c, 0x6b, 0x4a, 0xc6, 0x16, 0x9f, 0x49, 0xe2, 0x3a, 0x34, 0x7c, 0x6a, 0x2b, 0xac,
	0xa5, 0x28, 0x92, 0xd9, 0x93, 0x16, 0x32, 0x99, 0x93, 0x8d, 0xd8, 0xee, 0xee, 0x6e, 0x34, 0x88,
	0x7d, 0x4a, 0x11, 0xcf, 0xa0, 0x5b, 0xec, 0x54, 0x09, 0xcf, 0xe2, 0xb3, 0xa4, 0xdb, 0x58, 0x7c,
	0xb6, 0x41, 0x78, 0x7f, 0x57, 0x60, 0xb7, 0x4f, 0x3d, 0x8f, 0x4c, 0x79, 0xb6, 0xe2, 0x17, 0xc0,
	0x4b, 0xc2, 0xd5, 0x0c, 0x61, 0xf4, 0x05, 0xec, 0x4c, 0xa9, 0xc7, 0x2d, 0xd7, 0x23, 0xc1, 0x3d,
	0xe1, 0xb3, 0xf0, 0x32, 0x22, 0x4f, 0xab, 0x07, 0xb9, 0x97, 0xde, 0x5e, 0xc9, 0xbc, 0x11, 0xec,
	0xe5, 0x38, 0xc5, 0x31, 0x2b, 0xf1, 0x55, 0x8a, 0xe2, 0xab, 0x66, 0xe2, 0x73, 0x43, 0xa8, 0x47,
	0xd7, 0x59, 0x04, 0x64, 0x24, 0xca, 0xc8, 0x7f, 0xc5, 0xd7, 0x81, 0xea, 0x68, 0x1c, 0x03, 0x54,
	0x47, 0xe3, 0x97, 0x45, 0x85, 0x7f, 0x80, 0xfd, 0xbc, 0xab, 0x4d, 0x69, 0x9f, 0xfd, 0xd3, 0x82,
	0x4e, 0xfc, 0xfa, 0x7d, 0xea, 0xf1, 0x80, 0xce, 0xd1, 0x39, 0x6c, 0x8b, 0xa1, 0x05, 0x29, 0xb5,
	0x5a, 0x99, 0x73, 0x8c, 0xfd, 0xfc, 0x76, 0xe4, 0x1b, 0x6f, 0x09, 0x43, 0x31, 0xa6, 0xa8, 0x86,
	0xca, 0x64, 0xa3, 0x1a, 0xaa, 0xd3, 0x0c, 0xde, 0x42, 0x43, 0x68, 0xab, 0x63, 0x06, 0xfa, 0x34,
	0xd5, 0x5c, 0x33, 0x7e, 0x18, 0x0a, 0xbe, 0x32, 0xf2, 0x44, 0x38, 0xea, 0x4c, 0xa1, 0xe2, 0xac,
	0x99, 0x35, 0x8a, 0x71, 0xbe, 0x81, 0x46, 0x3c, 0x64, 0x20, 0x3d, 0xd5, 0xc9, 0xce, 0x1d, 0xc5,
	0xd6, 0xdf, 0x82, 0x76, 0x61, 0xdb, 0x83, 0xf1, 0xe0, 0xc7, 0xcd, 0x11, 0x1a, 0x71, 0x37, 0x55,
	0xad, 0xb3, 0x9d, 0xdc, 0x38, 0x58, 0x73, 0xa2, 0x46, 0x30, 0x59, 0x45, 0xc8, 0x0e, 0x1d, 0xc5,
	0xfe, 0x2f, 0x01, 0xd2, 0x7e, 0x8a, 0x0e, 0xf3, 0xb7, 0x58, 0x0a, 0x23, 0xba, 0x43, 0xd1, 0x64,
	0x72, 0x37, 0xa0, 0xb4, 0xbf, 0x12, 0x0c, 0x42, 0x80, 0x15, 0x06, 0xa5, 0x30, 0x86, 0xd0, 0x4a,
	0xfa, 0x1c, 0x32, 0x14, 0x88, 0x5c, 0xc3, 0x34, 0x0e, 0xd7, 0x9e, 0xe5, 0x71, 0xc2, 0xf6, 0x94,
	0xc7, 0x51, 0xfb, 0x5c, 0x1e, 0x27, 0xd3, 0xcf, 0xf0, 0x16, 0xea, 0x43, 0x53, 0x6e, 0xa3, 0x83,
	0x55, 0x55, 0x89, 0x62, 0xac, 0x3b, 0x4a, 0x40, 0x18, 0xe8, 0x45, 0x05, 0x1b, 0x7d, 0x96, 0x5a,
	0xfe, 0x4f, 0x27, 0x31, 0x3e, 0x2f, 0xa3, 0x9a, 0x38, 0x35, 0xe1, 0xa3, 0x4c, 0x99, 0x44, 0x47,
	0xca, 0x07, 0xba, 0xa6, 0xa6, 0x1b, 0xc7, 0x85, 0xe7, 0x09, 0xe6, 0x1d, 0x74, 0xb2, 0x45, 0x0c,
	0x65, 0x8d, 0x56, 0x2b, 0xa9, 0xd1, 0x2d, 0x56, 0x90, 0xb0, 0x0f, 0x6f, 0xc2, 0xbf, 0xb4, 0xaf,
	0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x95, 0x4e, 0xb6, 0xc0, 0x0d, 0x00, 0x00,
}
